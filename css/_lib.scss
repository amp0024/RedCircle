@mixin vc-inline-block() {
  display: inline-block;
  vertical-align: middle;
}
@mixin vc-inline-block-helper() {
  &:after {
    content: "";
    display: inline-block;
    vertical-align: middle;
    width: 0;
    height: 100%;
    font-size: 0px;
  }
}
@mixin vc-table ($child: ".vcentered") {
  display: table;
  & > #{$child} {
    display: table-cell;
    vertical-align: middle;
  }
}
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie);
}
@mixin background-gradient-cb($G1, $S1, $G2, $S2, $vertical: true, $fallback: null) {
  @if $fallback == null {
    background-color: $G1;
  } @else {
    background-color: $fallback;
  }
  @if $vertical == true {
    background: linear-gradient(to bottom, $G1 $S1, $G2 $S2);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=#{$G1}, endColorstr=#{$G2},GradientType=0 );
  } @else {
    background: linear-gradient(to right, $G1 $S1, $G2 $S2);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=#{$G1}, endColorstr=#{$G2},GradientType=1 );
  }
}
@mixin sprite($width, $height, $posx, $posy, $url: $spriteURL, $retinaURL: $spriteRetinaURL, $retinaSize: $spriteRetinaSize, $content: true) {
  @if ( $content == true ) {
    content: ""; 
  }
  width: $width;
  height: $height;
  background: $url no-repeat $posx $posy;
  @if $retinaURL != null {
    @include media(-webkit-min-device-pixel-ratio 2) {
      background-image: $retinaURL;
      background-size: $retinaSize;
    }
    @include media(min-resolution 192dpi) {
      background-image: $retinaURL;
      background-size: $retinaSize;
    }
  }
}
@mixin sprite-callout($url) {
  background: url($url) no-repeat left top;
  -webkit-background-size: 100% 200%;
  background-size: 100% 200%;
  &:hover {
    background-position: left bottom;
  }
}
@mixin print {
  @media print {
    @content;
  }
}